This is a sample application for IoTCloud-ThingSDK.

## Build

When you build this sample application for the first time, you need to
retrieve some modules required by IoTCloud-ThingSDK. You can find the
way to retrieve these modules in ../README.mkd.

After that, execute following command:

```sh
# make
```

This makes exampleapp.

If you want to build exampleapp with debug mode. Execute following
command:

```sh
# make "CFLAGS+=-DDEBUG"
```

In debug mode, All HTTP requests and responses are logged.

## How to use

Execute folloging command on a terminal. Hereafter This terminal
called termianl A.

```sh
# ./exampleapp --vendor-thing-id
```

After that, open another terminal, and execute following command in
the another terminal. Hereafter This terminal called termianl B.

```sh
sh script/smart-light-post.sh
```

This script posts new command entry to server. exampleapp receives the
command entry and show followings on the terminal A.

```sh
schema=SmartLightDemo, schema_version=1, action name=turnPower, action params={"power":true}
schema=SmartLightDemo, schema_version=1, action name=setBrightness, action params={"brightness":3000}
schema=SmartLightDemo, schema_version=1, action name=setColor, action params={"color":[0,128,255]}
schema=SmartLightDemo, schema_version=1, action name=setColorTemperature, action params={"colorTemperature":-100}
```

If you want to check command state, you can use `script/smart-light-get.sh`.

```sh
sh script/smart-light-get.sh {COMMAND_ID}
```

{COMMAND_ID} can be found response of `script/smart-light-post.sh`.

## Thing state file.

This sample application sends thing state every 60 seconds. The
sending thing state is described in `smartlight-state.json`. Content
of this file is send to server. If you want to change thing state to
server, You can edit this file.

If `smartlight-state.json` does not exist, exampleapp sends last
received command contents as thing state.

If you want to change period of sending thing state to server, you can
edit `EX_STATE_UPDATE_PERIOD` in `example.h`.
